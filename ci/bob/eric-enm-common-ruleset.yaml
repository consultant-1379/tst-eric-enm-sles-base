modelVersion: 2.0

description: "cENM: Common Ruleset"

version: 1.0.18-1

# See image catalog: https://confluence.lmera.ericsson.se/display/ACD/ADP+CICD+Docker+Image+Catalog
docker-images:
  - eric-enm-version-auto: armdocker.rnd.ericsson.se/proj-enm/eric-enm-version-auto:${enm-vesrion-auto-tag}
  - eric-enm-yq: armdocker.rnd.ericsson.se/proj-enm/yq:${enm-yq-tag}
  - adp-helm-dr-check: armdocker.rnd.ericsson.se/proj-adp-cicd-drop/common-library-adp-helm-dr-check:${adp-helm-dr-check-tag}
  - adp-release-auto: armdocker.rnd.ericsson.se/proj-adp-cicd-drop/bob-adp-release-auto:${adp-release-auto-tag}

# List of constants
properties:
  - image-registry: armdocker.rnd.ericsson.se
  - common-ruleset-name: eric-enm-common-ruleset
  - docker-image-path: ""
  - docker-internal-image-path: ""
  - helm-chart-name: ""
  - helm-chart-repo: ""
  - image-repo: ""
  - image-name: ""
  - sidecar-docker-image-path: ""
  - sidecar-docker-internal-image-path: ""
  - sidecar-image-name: ""
  - skipped-design-rules: ""
  - disabled-design-rules: ""
  - enm-vesrion-auto-tag: "latest"
  - enm-yq-tag: "latest"
  - adp-helm-dr-check-tag: "latest"
  - adp-release-auto-tag: "4.7.2"

# Import environment variables (e.g. Jenkins parameters)
env:
  - RELEASE (default=true)
  - HELM_REPO_USER (default=cenmbuild)
  - HELM_REPO_TOKEN
  - ISO_VERSION (default=1.0.5555)
  - BUILD_DATE (default = $(date +%d%m%Y-%H%M%S --utc))
  - AUTHOR_NAME
  - AUTHOR_EMAIL
  - GIT_COMMITTER_NAME
  - GIT_COMMITTER_EMAIL
  - ENABLE_HELM_V3 (default=true)

var:
  - commit-hash
  - version
  - version-prefix
  - rstate

# Rules to execute
rules:
  swap-latest-versions-with-numbers:
    - task: swap_versions
      docker-image: eric-enm-version-auto
      docker-flags:
        - "--env-file enm_artifact.properties"
      cmd: python /substitute_values.py

  generate-new-version:
    - task: generate-version
      docker-image: adp-release-auto
      cmd: generate-version -f VERSION_PREFIX --is-release ${env.RELEASE} --output version
    - task: set-version-prefix
      cmd: cat VERSION_PREFIX > .bob/var.version-prefix
    - task: generate-rstate
      docker-image: adp-release-auto
      cmd: get_rstate.py ${var.version} > .bob/var.rstate
    - task: get-commit-hash
      docker-image: adp-release-auto
      cmd: git rev-parse --short HEAD > .bob/var.commit-hash

  build-image:
    - task: build-docker-image
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-image-path}:${var.version}
    - task: build-docker-image-sidecar
      cmd:
        - docker build ${sidecar-image-name} --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${sidecar-docker-image-path}:${var.version}

  build-image-with-all-tags:
    - task: build-docker-image-with-tags
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-image-path}:${var.version}
        - docker image tag ${docker-image-path}:${var.version} ${docker-image-path}:${var.version-prefix}-latest
        - docker image tag ${docker-image-path}:${var.version} ${docker-image-path}:latest
    - task: build-docker-image-with-tags-sidecar
      cmd:
        - docker build ${sidecar-image-name} --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${sidecar-docker-image-path}:${var.version}
        - docker image tag ${sidecar-docker-image-path}:${var.version} ${sidecar-docker-image-path}:${var.version-prefix}-latest
        - docker image tag ${sidecar-docker-image-path}:${var.version} ${sidecar-docker-image-path}:latest

  push-image-with-all-tags:
    - task: push-docker-image
      cmd:
        - docker push ${docker-image-path}:${var.version}
        - docker push ${docker-image-path}:${var.version-prefix}-latest
        - docker push ${docker-image-path}:latest
    - task: push-docker-image-sidecar
      cmd:
        - docker push ${sidecar-docker-image-path}:${var.version}
        - docker push ${sidecar-docker-image-path}:${var.version-prefix}-latest
        - docker push ${sidecar-docker-image-path}:latest

  remove-image:
    - task: remove-docker-image
      cmd:
        - docker image remove ${docker-image-path}:${var.version}
    - task: remove-docker-image-sidecar
      cmd:
        - docker image remove ${sidecar-docker-image-path}:${var.version}

  remove-image-with-all-tags:
    - task: remove-docker-image-with-tags
      cmd:
        - docker image remove ${docker-image-path}:${var.version}
        - docker image remove ${docker-image-path}:${var.version-prefix}-latest
        - docker image remove ${docker-image-path}:latest
    - task: remove-docker-image-with-tags-sidecar
      cmd:
        - docker image remove ${sidecar-docker-image-path}:${var.version}
        - docker image remove ${sidecar-docker-image-path}:${var.version-prefix}-latest
        - docker image remove ${sidecar-docker-image-path}:latest

  build-image-internal:
    - task: build-docker-image
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-internal-image-path}:${var.version}

  build-image-with-all-tags-internal:
    - task: build-docker-image-with-tags
      cmd:
        - docker build . --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${docker-internal-image-path}:${var.version}
        - docker image tag ${docker-internal-image-path}:${var.version} ${docker-internal-image-path}:${var.version-prefix}-latest
        - docker image tag ${docker-internal-image-path}:${var.version} ${docker-internal-image-path}:latest
    - task: build-docker-image-with-tags-sidecar
      cmd:
        - docker build ${sidecar-image-name} --build-arg GIT_COMMIT=${var.commit-hash} --build-arg BUILD_DATE=${env.BUILD_DATE} --build-arg IMAGE_BUILD_VERSION=${var.version} --build-arg RSTATE=${var.rstate} --build-arg ISO_VERSION=${env.ISO_VERSION} --tag ${sidecar-docker-internal-image-path}:${var.version}
        - docker image tag ${sidecar-docker-internal-image-path}:${var.version} ${sidecar-docker-internal-image-path}:${var.version-prefix}-latest
        - docker image tag ${sidecar-docker-internal-image-path}:${var.version} ${sidecar-docker-internal-image-path}:latest

  push-image-with-all-tags-internal:
    - task: push-docker-image
      cmd:
        - docker push ${docker-internal-image-path}:${var.version}
        - docker push ${docker-internal-image-path}:${var.version-prefix}-latest
        - docker push ${docker-internal-image-path}:latest
    - task: push-docker-image-sidecar
      cmd:
        - docker push ${sidecar-docker-internal-image-path}:${var.version}
        - docker push ${sidecar-docker-internal-image-path}:${var.version-prefix}-latest
        - docker push ${sidecar-docker-internal-image-path}:latest

  remove-image-internal:
    - task: remove-docker-image
      cmd:
        - docker image remove ${docker-internal-image-path}:${var.version}

  remove-image-with-all-tags-internal:
    - task: remove-docker-image-with-tags
      cmd:
        - docker image remove ${docker-internal-image-path}:${var.version}
        - docker image remove ${docker-internal-image-path}:${var.version-prefix}-latest
        - docker image remove ${docker-internal-image-path}:latest
    - task: remove-docker-image-with-tags-sidecar
      cmd:
        - docker image remove ${sidecar-docker-internal-image-path}:${var.version}
        - docker image remove ${sidecar-docker-internal-image-path}:${var.version-prefix}-latest
        - docker image remove ${sidecar-docker-internal-image-path}:latest

  helm-dep-up:
    - task: helm-dep-up
      docker-flags:
        - "--env ENABLE_HELM_V3=${env.ENABLE_HELM_V3}"
      docker-image: adp-release-auto
      cmd: helm dep up chart/${helm-chart-name}

  merge-values-files:
    - task: merge-values-files
      docker-image: eric-enm-yq
      cmd:
        - tar -xvf chart/${helm-chart-name}/charts/eric-enm-common-helmchart-library-*.tgz
        - yq m -i -x chart/${helm-chart-name}/values.yaml eric-enm-common-helmchart-library/values.yaml
        - rm -rf eric-enm-common-helmchart-library/

  merge-values-files-with-appconfig:
    - task: merge-values-files-with-appconfig
      docker-image: eric-enm-yq
      cmd:
        - tar -xvf chart/${helm-chart-name}/charts/eric-enm-common-helmchart-library-*.tgz
        - yq m -i -x chart/${helm-chart-name}/values.yaml eric-enm-common-helmchart-library/values.yaml
        - yq m -i -x chart/${helm-chart-name}/values.yaml chart/${helm-chart-name}/appconfig/values.yaml
        - rm -rf eric-enm-common-helmchart-library/

  lint-helm:
    - task: helm-lint
      docker-flags:
        - "--env ENABLE_HELM_V3=${env.ENABLE_HELM_V3}"
      docker-image: adp-release-auto
      cmd: helm lint chart/${helm-chart-name}

  test-helm:
    - task: helm-chart-check
      docker-image: adp-helm-dr-check
      cmd: java -DhelmDesignRule.feature.dependency=1 ${disabled-design-rules} ${skipped-design-rules} -jar /helm-dr-check.jar --helm-chart chart/${helm-chart-name} -c

  lint-dockerfile:
    - task: dockerfile-lint
      cmd:
        - docker run --rm -i hadolint/hadolint < Dockerfile | tee ./dockerfilelint.log

    - task: dockerfile-lint-sidecar
      cmd:
        - docker run --rm -i hadolint/hadolint < ${sidecar-image-name}/Dockerfile | tee ./httpddockerfilelint.log    

  build-helm:
    - task: helm-package
      docker-image: adp-release-auto
      docker-flags:
        - "--env ENABLE_HELM_V3=${env.ENABLE_HELM_V3}"
      cmd: helm-package --folder chart/${helm-chart-name} --version ${var.version} --replace VERSION=${var.version} --replace RSTATE=${var.rstate}

  push-helm:
    - task: helm-push
      docker-image: adp-release-auto
      cmd: upload_file.sh --filename=.bob/${helm-chart-name}-${var.version}.tgz --repository=${helm-chart-repo} --api-token=${env.HELM_REPO_TOKEN}

  generate-output-parameters:
    - task: generate-version
      docker-image: adp-release-auto
      cmd: generate-adp-artifacts --chart-name ${helm-chart-name} --chart-repo ${helm-chart-repo} --chart-version ${var.version} --image-repo ${image-repo} --image-name ${image-name} --image-version ${var.version}

  generate-metadata-parameters:
    - task: generate-metadata-version
      docker-image: eric-enm-version-auto
      docker-flags:
        - "--env ISO_VERSION='${env.ISO_VERSION}'"
      cmd: python /generate-metadata-artifacts.py

  generate-output-parameters-internal-stage:
    - task: generate-version-internal
      docker-image: adp-release-auto
      cmd: generate-adp-artifacts --chart-name ${helm-chart-name} --chart-repo ${helm-chart-repo} --chart-version ${var.version} --image-repo ${docker-internal-image-path} --image-name ${image-name} --image-version ${var.version}

  create-git-tag:
    - task: create-git-tag
      docker-image: adp-release-auto
      docker-flags:
        - "--env GIT_COMMITTER_NAME='${env.GIT_COMMITTER_NAME}'"
        - "--env GIT_COMMITTER_EMAIL='${env.GIT_COMMITTER_EMAIL}'"
      cmd: git tag --annotate ${var.version} --message "Build Version ${var.version} by ${env.AUTHOR_NAME} <${env.AUTHOR_EMAIL}>"

  remove-git-tag:
    - task: remove-git-tag
      docker-image: adp-release-auto
      cmd: git tag --delete ${var.version}

  push-image:
    - task: push-docker-image
      cmd:
        - docker push ${docker-image-path}:${var.version}
    - task: push-docker-image-sidecar
      cmd:
        - docker push ${sidecar-docker-image-path}:${var.version}

  post-success:
    - task: add-push-commit-common-ruleset
      docker-image: adp-release-auto
#      docker-flags:
#        - "-v /home/lciadm100/.gitconfig:/etc/gitconfig"
      cmd:
        - echo 'Post success commands to be added here...'
#        - git config --list
#        - git status
#        - git add cicd/bob/${common-ruleset-name}.yaml
#        - git commit -m "Common Ruleset file updated to latest specific version"
#        - git push origin HEAD:master